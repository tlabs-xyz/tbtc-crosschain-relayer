{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git rm:*)",
      "Bash(yarn build)",
      "Bash(yarn test)",
      "Bash(yarn test:*)",
      "Bash(npm uninstall:*)",
      "Bash(docker exec:*)",
      "Bash(yarn run:*)",
      "Bash(yarn fix)",
      "Bash(yarn lint:*)",
      "Bash(npx jest:*)",
      "Bash(gh api:*)",
      "mcp__mcp-sequentialthinking-tools__sequentialthinking_tools",
      "Bash(npx tsc:*)",
      "Bash(yarn tsc:*)",
      "Bash(yarn validate-config:*)",
      "Bash(mv:*)",
      "Bash(echo:*)",
      "Bash(yarn install)",
      "Bash(yarn format:fix)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "Bash(grep:*)",
      "mcp__serena__initial_instructions",
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__search_for_pattern",
      "mcp__serena__think_about_collected_information",
      "mcp__taskmaster-ai__initialize_project",
      "mcp__taskmaster-ai__parse_prd",
      "mcp__taskmaster-ai__get_tasks",
      "Bash(mkdir:*)",
      "Bash(npx eslint:*)",
      "Bash(tree:*)",
      "mcp__serena__list_dir",
      "mcp__serena__onboarding",
      "Bash(npx prisma migrate dev:*)",
      "mcp__serena__write_memory",
      "Bash(yarn db:status:*)",
      "Bash(yarn db:migrate:*)",
      "Bash(yarn db:reset:*)",
      "Bash(npx prisma migrate reset:*)",
      "Bash(yarn validate-endpoint-config:*)",
      "Bash(yarn exec:*)",
      "Bash(true)",
      "Bash(yarn format)",
      "Bash(yarn prettier:*)",
      "Bash(npx prettier:*)",
      "Bash(yarn clean:*)",
      "Bash(yarn prisma:generate:*)",
      "Bash(npx depcheck:*)",
      "mcp__memory__read_graph",
      "Bash(git reset:*)",
      "Bash(git checkout:*)",
      "Bash(sed:*)",
      "Bash(chmod:*)",
      "Bash(yarn audit:*)",
      "Bash(npm audit:*)",
      "Bash(git clean:*)",
      "Bash(yarn:*)"
    ],
    "deny": [
      "Bash(git push:*--force*)",
      "Bash(git push:*--mirror*)",
      "Bash(git push:*--delete*)",
      "Bash(git push:-f)",
      "Bash(git push:-f *)",
      "Bash(git push:* -f)",
      "Bash(git push:* -f *)"
    ]
  },
  "enableAllProjectMcpServers": false
}